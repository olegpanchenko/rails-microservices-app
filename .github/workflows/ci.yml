name: CI

# on: [push]

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job for scanning Ruby vulnerabilities for auth-service
  scan_ruby_auth_service:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up the correct directory for auth-service
        run: cd auth-service

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2.2"
          bundler-cache: true

      - name: Install dependencies for auth-service
        run: |
          cd auth-service
          bundle install

      - name: Scan for common Rails security vulnerabilities using static analysis for auth-service
        run: |
          cd auth-service
          bundle exec brakeman --no-pager

  # Linting job for auth-service
  lint_auth_service:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up the correct directory for auth-service
        run: cd auth-service

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2.2"
          bundler-cache: true

      - name: Lint code for consistent style for auth-service
        run: cd auth-service && bundle install && bin/rubocop -f github

  # Test job for auth-service
  test_auth_service:
    runs-on: ubuntu-latest

    steps:
      - name: Install packages for auth-service
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y build-essential git libyaml-dev pkg-config google-chrome-stable

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up the correct directory for auth-service
        run: cd auth-service

      - name: Set up Ruby for auth-service
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2.2"
          bundler-cache: true

      - name: Run tests for auth-service
        env:
          RAILS_ENV: test
        run: cd auth-service && bundle install && bin/rails db:create db:schema:load spec

      - name: Keep screenshots from failed system tests for auth-service
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore

  # Job for scanning Ruby vulnerabilities for product-service
  scan_ruby_product_service:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up the correct directory for product-service
        run: cd product-service

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2.2"
          bundler-cache: true

      - name: Install dependencies for product-service
        run: |
          cd product-service
          bundle install

      - name: Scan for common Rails security vulnerabilities using static analysis for product-service
        run: |
          cd product-service
          bundle exec brakeman --no-pager

  # Linting job for product-service
  lint_product_service:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up the correct directory for product-service
        run: cd product-service

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2.2"
          bundler-cache: true

      - name: Lint code for consistent style for product-service
        run: cd product-service && bundle install && bin/rubocop -f github

  # Test job for product-service
  test_product_service:
    runs-on: ubuntu-latest

    steps:
      - name: Install packages for product-service
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y build-essential git libyaml-dev pkg-config google-chrome-stable

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up the correct directory for product-service
        run: cd product-service

      - name: Set up Ruby for product-service
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2.2"
          bundler-cache: true

      - name: Run tests for product-service
        env:
          RAILS_ENV: test
        run: cd product-service && bundle install && bin/rails db:create db:schema:load spec

      - name: Keep screenshots from failed system tests for product-service
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore
